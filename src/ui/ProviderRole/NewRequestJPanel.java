/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ProviderRole;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business;
import model.Role.DeptOfPHealth;
import model.UserAccount.UserAccount;
import model.WorkQueue.VaccinOrder;
import model.WorkQueue.VaccineOrderItem;
import model.WorkQueue.WorkRequestDirectory;
import model.organization.Organization;
import model.vaccinemgnt.Vaccine;

/**
 *
 * @author wenwen
 */
public class NewRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Business businesstheInstance;
    UserAccount ua;
    VaccinOrder currentOrder;
    DeptOfPHealth deptOfHealth;
            
    /**
     * Creates new form NewRequestJPanel
     */
    public NewRequestJPanel(JPanel userProcessContainer, UserAccount ua,Business business) {
        initComponents();
        setSize(700,500);
        this.userProcessContainer=userProcessContainer;
        this.businesstheInstance=business.theInstance();
        this.ua=ua;
        this.currentOrder = new VaccinOrder();   
        populateProductTable();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        btnSearchProduct = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductCatalog = new javax.swing.JTable();
        lblProductCatalogue = new javax.swing.JLabel();
        lblSalesPrice = new javax.swing.JLabel();
        txtSalesPrice = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        spnQuantity = new javax.swing.JSpinner();
        btnAddToCart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        lblItemsInCart = new javax.swing.JLabel();
        btnModifyQuantity = new javax.swing.JButton();
        txtNewQuantity = new javax.swing.JTextField();
        btnCheckOut = new javax.swing.JButton();

        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        btnSearchProduct.setText("Refresh");
        btnSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProductActionPerformed(evt);
            }
        });

        tblProductCatalog.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        tblProductCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Vaccine Type", "Manufacture", "Price", "Production Date", "batch"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProductCatalog);
        if (tblProductCatalog.getColumnModel().getColumnCount() > 0) {
            tblProductCatalog.getColumnModel().getColumn(0).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(1).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(2).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(3).setResizable(false);
            tblProductCatalog.getColumnModel().getColumn(4).setResizable(false);
        }

        lblProductCatalogue.setText("Product Catalog:");

        lblSalesPrice.setText("Sales Price:");

        lblQuantity.setText("Quantity:");

        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        btnAddToCart.setText("Add to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCart);

        lblItemsInCart.setText("Items in cart:");

        btnModifyQuantity.setText("Modify Quantity");
        btnModifyQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyQuantityActionPerformed(evt);
            }
        });

        txtNewQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewQuantityActionPerformed(evt);
            }
        });

        btnCheckOut.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnCheckOut.setText("Submit");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(Back))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblSalesPrice)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblQuantity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(btnAddToCart))
                                    .addComponent(lblItemsInCart)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnModifyQuantity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnSearchProduct)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblProductCatalogue)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(Back)
                .addGap(4, 4, 4)
                .addComponent(btnSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(lblProductCatalogue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalesPrice)
                    .addComponent(txtSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity)
                    .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddToCart))
                .addGap(18, 18, 18)
                .addComponent(lblItemsInCart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifyQuantity)
                    .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        //add back button on the page
        userProcessContainer.remove(this);
        ((java.awt.CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
    }//GEN-LAST:event_BackActionPerformed

    private void btnSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProductActionPerformed

        populateProductTable();
        populateCartTable();

    }//GEN-LAST:event_btnSearchProductActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:

        
        VaccinOrder vo = new VaccinOrder();
        
        int selectedProductIndex=tblProductCatalog.getSelectedRow();
        
        
        if (selectedProductIndex<0){
            JOptionPane.showMessageDialog(this, "Please select one item.");
            return;
        }
        Vaccine v = (Vaccine)tblProductCatalog.getValueAt(selectedProductIndex, 0);
            float salesPrice = 0 ;
            int quant = 0;

        try{
            salesPrice = Float.parseFloat(txtSalesPrice.getText());
            quant = (Integer)spnQuantity.getValue();

        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please check the quantity and price.");
            return;
        }

        if (salesPrice < v.getPrice()){
            JOptionPane.showMessageDialog(this, "Price should be more than what its is set.");
            return;
        } else {
            
            VaccineOrderItem vacitem = currentOrder.findProduct(v);
            
            if (vacitem == null){
                if (quant <= v.getStockNum()){
                    currentOrder.addNewOrderItem(v, salesPrice, quant);
                    v.setStockNum(v.getStockNum()-quant);
                } 
                else{ 
                JOptionPane.showMessageDialog(this, "Quantity should not be more than availability.");
                return;             
                }
           }       
            else{
                int oldQuant = vacitem.getQuantity();  //oldQuant = the quantatity in cart.
                
                if(vacitem.getProduct().getStockNum()+oldQuant<quant){
                   JOptionPane.showMessageDialog(this, "Please check the product availability.");
                    return;  
                }
                vacitem.getProduct().setStockNum(vacitem.getProduct().getStockNum()+oldQuant-quant);
                vacitem.setQuantity(quant);
            }
            
        populateProductTable();
        populateCartTable();
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnModifyQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyQuantityActionPerformed
        // TODO add your handling code here:

        int selectedPowIndex = tblCart.getSelectedRow();
        if (selectedPowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select the item first.");
            return;
        }

        VaccineOrderItem voi = (VaccineOrderItem)tblCart.getValueAt(selectedPowIndex, 0);
        int quant = 0;
        
        try{
            quant = Integer.parseInt(txtNewQuantity.getText());

        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please check the modified quantity fields");
            return;
    }//GEN-LAST:event_btnModifyQuantityActionPerformed
        int oldQuant = voi.getQuantity();  //oldQuant = the quantatity in cart.
        if(voi.getProduct().getStockNum()+oldQuant<quant){
            JOptionPane.showMessageDialog(this, "Please check the product availability.");
            return;  
        }
        voi.getProduct().setStockNum(voi.getProduct().getStockNum()+oldQuant-quant);
        voi.setQuantity(quant);
        populateCartTable();
        populateProductTable();
    }
    private void txtNewQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewQuantityActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:


        
        currentOrder.setSender(ua);
        currentOrder.setReceiver(DeptOfPHealth.RoleTyp);
        currentOrder.setTestResult("not test yet");
        currentOrder.setSubmittedDate("2023-Aug-21");
        currentOrder.setStatus("submitted");
        currentOrder.setMessage("regular delivery in 2 weeks");
        businesstheInstance.getWorkQueue().getVaccRequestList().add(currentOrder);
        
        populateProductTable();
        populateCartTable();

        
        txtNewQuantity.setText("");
        txtSalesPrice.setText("");
        spnQuantity.setValue(0);

        JOptionPane.showMessageDialog(this, "Thank you for your purchase, Order will be in process." );

    }//GEN-LAST:event_btnCheckOutActionPerformed
    
    public void populateProductTable(){

        DefaultTableModel model = (DefaultTableModel) tblProductCatalog.getModel();
        model.setRowCount(0);


        for (Vaccine vs : businesstheInstance.getVaccineDirectory().getVaccineList()) {
            Object row[] = new Object[5];
            row[0] = vs;
            row[1] = vs.getManufacture();
            row[2] = vs.getPrice();
            row[3] = vs.getProducedDate();
            row[4] = vs.getBatch();
            
            model.addRow(row);
        }
        
    }
    
    public void populateCartTable(){
        
        int totalQuant =0;
        
        
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.setRowCount(0);
        
            for (VaccineOrderItem voi:currentOrder.getVaccineItemList()){

                Object row[] = new Object[4];
                row[0] = voi;
                row[1] = voi.getSalesPrice();
                row[2] = voi.getQuantity();
                row[3] = voi.getSalesPrice() * voi.getQuantity();
                model.addRow(row);
                
                totalQuant = totalQuant+ voi.getQuantity();
            }
    }
                   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnModifyQuantity;
    private javax.swing.JButton btnSearchProduct;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblItemsInCart;
    private javax.swing.JLabel lblProductCatalogue;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSalesPrice;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblProductCatalog;
    private javax.swing.JTextField txtNewQuantity;
    private javax.swing.JTextField txtSalesPrice;
    // End of variables declaration//GEN-END:variables
}
